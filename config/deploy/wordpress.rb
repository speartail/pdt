namespace :app do

  desc "Create wp-config.php"
  task :config do
    wp_config = ERB.new <<-EOF
<?php

/** THIS FILE IS AUTOGENERATED - DO NOT EDIT! **/

define('DB_NAME', '#{db_name}');
define('DB_USER', '#{db_user}');
define('DB_PASSWORD', '#{db_pass}');
define('DB_HOST', '#{db_host}');
define('DB_CHARSET', 'utf8');
define('DB_COLLATE', '');

#{generate_keys}

$table_prefix = '#{db_prefix}';
define('WPLANG', '#{wp_language}');
define('WP_DEBUG', false);
if ( !defined('ABSPATH') )
  define('ABSPATH', dirname(__FILE__).'/');

require_once(ABSPATH . 'wp-settings.php');
?>
EOF
    put db_config.result, "#{shared_path}/wp-config.php"
  end

  desc "Make configuration symlink"
  task :symlink do
    run "ln -nfs #{shared_path}/wp-config.php #{release_path}/wp-config.php"
  end

  task "Set permissions"
  task :permissions do
    run "chmod -f 755 #{release_path}/timthumb.php"
    run "chmod -f 777 #{release_path}/cache"
  end

end

namespace :db do
  desc "Change configuration stored in DB"
  task :config do
    %w[home siteurl].each do |k|
      run %Q[mysql -h#{db_host} -u#{db_user} -p#{db_pass} #{db_name} -e "UPDATE #{db_prefix}options SET option_value = 'http://#{host}' WHERE option_name = '#{k}'"]
    end
  end
end

def generate_keys
  keys = ''
  %w( AUTH_KEY SECURE_AUTH_KEY LOGGED_IN_KEY NONCE_KEY AUTH_SALT SECURE_AUTH_SALT LOGGED_IN_SALT NONCE_SALT).each do |k|
    keys <<  "define('#{k}', '#{random_chars}');\n"
  end
  return keys
end

def random_chars(length = 64)
  return rand(36**length).to_s(36)
end
